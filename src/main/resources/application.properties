shutdown.sleep.duration=5000
spring.jmx.enabled=true
disruptor.buffer.size=4096
writer.file.path=resources/output.txt
spring.main.web-application-type=NONE

server.port=20010
server.hostname=localhost
inbound.journal.path=../logs/inbound-journal.txt
outbound.journal.path=../logs/outbound-journal.txt
inbound.journal.recovery.file.path=../logs/inbound-journal-recovery.txt

#input.reader.file.path=C://data//chronicle-queue-input
#input.reader.file.path=horatio.txt
input.reader.file.path=harper.txt
output.writer.file.path=harper.txt
output.writer.delimiter=|
input.reader.payload.type=dummy-data
#input.reader.end.indicator=END_OF_DATA
input.reader.end.indicator=
check.json.validity=false

# Active MQ properties
spring.activemq.broker-url=tcp://localhost:61616
input.spring.activemq=input.activemq
spring.jms.pub-sub-domain=true

file.output.writer=true
amps.output.writer=false
mongodb.output.writer=false
http.input.reader=true
file.input.reader=false
mongodb.input.reader=false
jms.input.reader=false
amps.input.reader=false
websocket.input.reader=false

# Used by the data processor to determine the type of data to process
input.reader.include.filter=
input.reader.exclude.filter=event

# AMPS properties
input.reader.amps.name=subscriber
input.reader.amps.connection.string=tcp://localhost:9007/amps/json?ip_protocol_prefer=ipv6
input.reader.amps.topic=prices
output.writer.amps.topic=prices
input.reader.amps.filter =/symbol LIKE 'ABCD'
output.writer.amps.name=amps-publisher
output.writer.amps.connection.string=tcp://localhost:9007/amps/json?ip_protocol_prefer=ipv6

# Mongo DB properties
logging.level.org.mongodb.driver.cluster=off
mongodb.writer.connection.uri=mongodb://workbench_user:workbench_user@leonadeoyemongodbcluster-shard-00-01-gni1u.azure.mongodb.net:27017,leonadeoyemongodbcluster-shard-00-00-gni1u.azure.mongodb.net:27017,leonadeoyemongodbcluster-shard-00-02-gni1u.azure.mongodb.net:27017/admin?serverSelectionTimeoutMS=20000&readPreference=primary&ssl=true
mongodb.writer.database.name=leon
mongodb.writer.collection.name=test
#mongodb.writer.batch.size=1000
mongodb.reader.connection.uri=mongodb://workbench_user:workbench_user@leonadeoyemongodbcluster-shard-00-01-gni1u.azure.mongodb.net:27017,leonadeoyemongodbcluster-shard-00-00-gni1u.azure.mongodb.net:27017,leonadeoyemongodbcluster-shard-00-02-gni1u.azure.mongodb.net:27017/admin?serverSelectionTimeoutMS=20000&readPreference=primary&ssl=true
mongodb.reader.database.name=leon
mongodb.reader.collection.name=test

# Web socket properties
websocket.reader.subscribe.request={"event": "subscribe","pair": ["DOT/USD", "MATIC/USD", "SOL/USD", "DOGE/USD", "ADA/USD", "XBT/USD", "ETH/USD", "XRP/USD", "XBT/GBP", "XBT/JPY", "AAVE/USD", "LTC/USD", "MANA/USD", "EOS/USD", "ETHW/USD", "ETC/USD", "FIL/USD", "XMR/USD", "DOT/EUR", "MATIC/EUR", "SOL/EUR", "DOGE/EUR", "ADA/EUR", "XBT/EUR", "ETH/EUR", "MANA/EUR", "ETHW/EUR", "ETC/EUR"],"subscription": {"name": "ticker"}}
websocket.reader.source.url=wss://ws.kraken.com

# Http properties
input.reader.http.url=https://openexchangerates.org/api/latest.json?app_id=62fe3c007da5482c8568c27cce515fbf
input.reader.http.interval=300000
input.reader.http.root.node=rates
input.reader.http.method=GET







